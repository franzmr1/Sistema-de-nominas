@model IEnumerable<NominaEmpresa.Dominio.Pagos>
@{
    ViewBag.Title = "Gestión de Pagos";
    var periodos = Model.Select(p => p.PeriodoNombre)
                       .Distinct()
                       .OrderByDescending(p => p)
                       .ToList();
}

<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-3">
    <h1 class="h3 mb-0 text-gray-800">
        <i class="fas fa-money-bill-wave fa-sm mr-2 text-gray-600"></i>
        Gestión de Pagos
    </h1>
    @using (Html.BeginForm("GenerarPago", "Pagos", FormMethod.Post, new { @class = "m-0" }))
    {
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary btn-sm shadow-sm">
            <i class="fas fa-money-bill-wave fa-sm text-white-50 mr-1"></i>
            Procesar Pagos
        </button>
    }
</div>

<!-- Tarjetas de Resumen Ampliadas -->
<div class="row mb-4">
    <!-- Total de Pagos -->
    <div class="col-xl-2 col-md-4 mb-2">
        <div class="card border-left-primary shadow h-100 py-2 hover-shadow">
            <div class="card-body py-2">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Total Registros</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800" id="totalPagos">
                            @Model.Count()
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Total Sueldo Base -->
    <div class="col-xl-2 col-md-4 mb-2">
        <div class="card border-left-info shadow h-100 py-2 hover-shadow">
            <div class="card-body py-2">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Sueldo Base Total</div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800" id="totalSueldoBase">
                            @Model.Sum(x => x.SueldoBase).ToString("C2", new System.Globalization.CultureInfo("es-PE"))
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-hand-holding-usd fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Total Bonos -->
    <div class="col-xl-2 col-md-4 mb-2">
        <div class="card border-left-warning shadow h-100 py-2 hover-shadow">
            <div class="card-body py-2">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Total Bonos</div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800" id="totalBonos">
                            @Model.Sum(x => x.BonosCalculados ?? 0).ToString("C2", new System.Globalization.CultureInfo("es-PE"))
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-plus-circle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Total Horas Extras -->
    <div class="col-xl-2 col-md-4 mb-2">
        <div class="card border-left-secondary shadow h-100 py-2 hover-shadow">
            <div class="card-body py-2">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-secondary text-uppercase mb-1">Horas Extras</div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800" id="totalHorasExtras">
                            @Model.Sum(x => x.HorasExtrasCalculadas ?? 0).ToString("C2", new System.Globalization.CultureInfo("es-PE"))
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-clock fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Total Deducciones -->
    <div class="col-xl-2 col-md-4 mb-2">
        <div class="card border-left-danger shadow h-100 py-2 hover-shadow">
            <div class="card-body py-2">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Deducciones</div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800" id="totalDeducciones">
                            @Model.Sum(x => x.DeduccionesCalculadas ?? 0).ToString("C2", new System.Globalization.CultureInfo("es-PE"))
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-minus-circle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Total Pagado Neto -->
    <div class="col-xl-2 col-md-4 mb-2">
        <div class="card border-left-success shadow h-100 py-2 hover-shadow">
            <div class="card-body py-2">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Total Neto</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800" id="totalMonto">
                            @Model.Sum(x => x.PagosSalarioNeto).ToString("C2", new System.Globalization.CultureInfo("es-PE"))
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Alertas -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show shadow-sm py-2" role="alert">
        <i class="fas fa-exclamation-triangle mr-2"></i>
        @TempData["Error"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["Mensaje"] != null)
{
    <div class="alert alert-success alert-dismissible fade show shadow-sm py-2" role="alert">
        <i class="fas fa-check-circle mr-2"></i>
        @TempData["Mensaje"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<!-- Filtros -->
<div class="d-flex justify-content-between mb-3">
    <div class="input-group input-group-sm" style="width: 200px;">
        <div class="input-group-prepend">
            <label class="input-group-text" for="periodFilter">
                <i class="fas fa-calendar-alt"></i>
            </label>
        </div>
        <select id="periodFilter" class="form-control form-control-sm">
            <option value="">Todos los períodos</option>
            @foreach (var periodo in periodos)
            {
                <option value="@periodo">@periodo</option>
            }
        </select>
    </div>

    <!-- Botón para mostrar/ocultar detalles -->
    <div class="btn-group" role="group">
        <button type="button" class="btn btn-outline-primary btn-sm" id="toggleDetails">
            <i class="fas fa-eye mr-1"></i>
            Ver Detalles
        </button>
        <button type="button" class="btn btn-outline-secondary btn-sm" id="exportBtn">
            <i class="fas fa-download mr-1"></i>
            Exportar
        </button>
    </div>
</div>

<!-- Tabla de Pagos con Desglose Completo -->
<div class="card shadow mb-4">
    <div class="card-header py-2">
        <h6 class="m-0 font-weight-bold text-primary">
            <i class="fas fa-list fa-sm fa-fw mr-2"></i>
            Lista de Pagos Realizados - Desglose Completo
        </h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-hover table-sm" id="dataTable" style="width: 100%; border-spacing: 0;">
                <thead>
                    <tr>
                        <th scope="col" class="text-center">ID</th>
                        <th scope="col" class="text-center">Contrato</th>
                        <th scope="col">Trabajador</th>
                        <th scope="col" class="text-center">Sueldo Base</th>
                        <th scope="col" class="text-center detalles-col" style="display:none;">Bonos %</th>
                        <th scope="col" class="text-center detalles-col" style="display:none;">Bonos S/</th>
                        <th scope="col" class="text-center detalles-col" style="display:none;">Deduc. %</th>
                        <th scope="col" class="text-center detalles-col" style="display:none;">Deduc. S/</th>
                        <th scope="col" class="text-center detalles-col" style="display:none;">H. Extras</th>
                        <th scope="col" class="text-center detalles-col" style="display:none;">H.E. S/</th>
                        <th scope="col" class="text-center sueldo-neto-col">
                            <span class="badge badge-success">Sueldo Neto</span>
                        </th>
                        <th scope="col" class="text-center">Periodo</th>
                        <th scope="col" class="text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-monto="@item.PagosSalarioNeto"
                            data-sueldo-base="@item.SueldoBase"
                            data-bonos="@(item.BonosCalculados ?? 0)"
                            data-deducciones="@(item.DeduccionesCalculadas ?? 0)"
                            data-horas-extras="@(item.HorasExtrasCalculadas ?? 0)"
                            data-periodo="@item.PeriodoNombre">
                            <td class="text-center">
                                <span class="badge badge-light">@item.PagosCodigo</span>
                            </td>
                            <td class="text-center">
                                <span class="badge badge-info">@item.ContratoCodigo</span>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="mr-2">
                                        <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center" style="width: 35px; height: 35px;">
                                            <span class="text-white font-weight-bold">
                                                @item.NombreTrabajador.Substring(0, Math.Min(2, item.NombreTrabajador.Length)).ToUpper()
                                            </span>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="font-weight-bold">@item.NombreTrabajador</div>
                                        <div class="text-muted small">Contrato #@item.ContratoCodigo</div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">
                                <span class="font-weight-bold text-primary">
                                    @item.SueldoBase.ToString("C2", new System.Globalization.CultureInfo("es-PE"))
                                </span>
                            </td>
                            <!-- Columnas de detalles (ocultas por defecto) -->
                            <td class="text-center detalles-col" style="display:none;">
                                <span class="badge badge-warning">
                                    @(item.PorcentajeBonificaciones?.ToString("F1") ?? "0")%
                                </span>
                            </td>
                            <td class="text-center detalles-col" style="display:none;">
                                <span class="text-success font-weight-bold">
                                    @((item.BonosCalculados ?? 0).ToString("C2", new System.Globalization.CultureInfo("es-PE")))
                                </span>
                            </td>
                            <td class="text-center detalles-col" style="display:none;">
                                <span class="badge badge-danger">
                                    @(item.PorcentajeDeducciones?.ToString("F1") ?? "0")%
                                </span>
                            </td>
                            <td class="text-center detalles-col" style="display:none;">
                                <span class="text-danger font-weight-bold">
                                    @((item.DeduccionesCalculadas ?? 0).ToString("C2", new System.Globalization.CultureInfo("es-PE")))
                                </span>
                            </td>
                            <td class="text-center detalles-col" style="display:none;">
                                <span class="badge badge-secondary">
                                    @(item.HorasExtras?.ToString("F1") ?? "0") hrs
                                </span>
                            </td>
                            <td class="text-center detalles-col" style="display:none;">
                                <span class="text-info font-weight-bold">
                                    @((item.HorasExtrasCalculadas ?? 0).ToString("C2", new System.Globalization.CultureInfo("es-PE")))
                                </span>
                            </td>
                            <!-- Sueldo Neto -->
                            <td class="text-center sueldo-neto-col">
                                <div class="position-relative">
                                    <span class="font-weight-bold text-success h6 mb-0">
                                        @item.PagosSalarioNeto.ToString("C2", new System.Globalization.CultureInfo("es-PE"))
                                    </span>
                                    <div class="progress mt-1" style="height: 3px;">
                                        @{
                                            var porcentaje = item.SueldoBase > 0 ? (item.PagosSalarioNeto / item.SueldoBase * 100) : 0;
                                            var colorBarra = porcentaje > 100 ? "bg-success" : porcentaje > 90 ? "bg-warning" : "bg-info";
                                        }
                                        <div class="progress-bar @colorBarra" role="progressbar"
                                             style="width: @Math.Min(porcentaje, 100)%"
                                             title="@porcentaje.ToString("F1")% del sueldo base">
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">
                                <span class="badge badge-outline-primary">@item.PeriodoNombre</span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm btn-outline-info"
                                            data-toggle="tooltip" title="Ver Detalle"
                                            onclick="verDetallePago(@item.PagosCodigo)">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-primary"
                                            data-toggle="tooltip" title="Descargar Boleta"
                                            onclick="descargarBoleta(@item.PagosCodigo)">
                                        <i class="fas fa-download"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal para Detalle del Pago -->
<div class="modal fade" id="modalDetallePago" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="fas fa-calculator mr-2"></i>
                    Detalle del Cálculo de Pago
                </h5>
                <button type="button" class="close text-white" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalDetallePagoContent">
                <!-- Contenido dinámico del detalle -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="imprimirDetalle()">
                    <i class="fas fa-print mr-1"></i>
                    Imprimir
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Inicialización de DataTable
            var table = $('#dataTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json",
                    "lengthMenu": "_MENU_",
                    "searchPlaceholder": "Buscar trabajador, período..."
                },
                "ordering": true,
                "order": [[0, "desc"]],
                "pageLength": 15,
                "lengthMenu": [[10, 15, 25, 50], [10, 15, 25, 50]],
                "dom": "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                "drawCallback": function (settings) {
                    actualizarTotales();
                    $('[data-toggle="tooltip"]').tooltip();
                },
                "columnDefs": [
                    { "width": "8%", "targets": [0, 1] },
                    { "width": "25%", "targets": 2 },
                    { "width": "10%", "targets": [3, 10] },
                    { "width": "12%", "targets": 11 },
                    { "width": "10%", "targets": 12 }
                ],
                "scrollX": true
            });

            // Filtro por período
            $('#periodFilter').on('change', function () {
                table.column(11).search($(this).val()).draw();
            });

            // Toggle para mostrar/ocultar detalles
            $('#toggleDetails').on('click', function () {
                var $btn = $(this);
                var $cols = $('.detalles-col');

                if ($cols.is(':visible')) {
                    $cols.hide();
                    $btn.html('<i class="fas fa-eye mr-1"></i> Ver Detalles');
                    $btn.removeClass('btn-primary').addClass('btn-outline-primary');
                } else {
                    $cols.show();
                    $btn.html('<i class="fas fa-eye-slash mr-1"></i> Ocultar Detalles');
                    $btn.removeClass('btn-outline-primary').addClass('btn-primary');
                }

                table.columns.adjust().draw();
            });

            // Función corregida para actualizar los totales
            function actualizarTotales() {
                var totalMonto = 0;
                var totalBase = 0;
                var totalBonos = 0;
                var totalDeducciones = 0;
                var totalHorasExtras = 0;

                // Obtener filas visibles después del filtrado
                table.rows({ search: 'applied' }).every(function (rowIdx, tableLoop, rowLoop) {
                    var $row = $(this.node());

                    // Usar los atributos data- para obtener todos los valores
                    var monto = parseFloat($row.data('monto')) || 0;
                    var base = parseFloat($row.data('sueldo-base')) || 0;
                    var bonos = parseFloat($row.data('bonos')) || 0;
                    var deducciones = parseFloat($row.data('deducciones')) || 0;
                    var horasExtras = parseFloat($row.data('horas-extras')) || 0;

                    // Sumar todos los valores
                    totalMonto += monto;
                    totalBase += base;
                    totalBonos += bonos;
                    totalDeducciones += deducciones;
                    totalHorasExtras += horasExtras;
                });

                // Actualizar contadores
                $('#totalPagos').text(table.rows({ search: 'applied' }).count());

                var formatter = new Intl.NumberFormat('es-PE', {
                    style: 'currency',
                    currency: 'PEN',
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                });

                $('#totalMonto').text(formatter.format(totalMonto));
                $('#totalSueldoBase').text(formatter.format(totalBase));
                $('#totalBonos').text(formatter.format(totalBonos));
                $('#totalDeducciones').text(formatter.format(totalDeducciones));
                $('#totalHorasExtras').text(formatter.format(totalHorasExtras));
            }

            // Event listeners para actualización de totales
            table.on('search.dt', actualizarTotales);
            table.on('page.dt', actualizarTotales);
            table.on('order.dt', actualizarTotales);
            table.on('length.dt', actualizarTotales);
        });

        // Función para ver detalle del pago
        function verDetallePago(pagoId) {
            // Aquí harías una llamada AJAX para obtener el detalle del pago
            $.ajax({
                url: '/Pagos/ObtenerDetalle/' + pagoId,
                type: 'GET',
                success: function (data) {
                    var content = `
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0"><i class="fas fa-user mr-2"></i>Información del Trabajador</h6>
                                            </div>
                                            <div class="card-body">
                                                <p><strong>Nombre:</strong> ${data.NombreTrabajador}</p>
                                                <p><strong>Contrato:</strong> #${data.ContratoCodigo}</p>
                                                <p><strong>Cargo:</strong> ${data.CargoNombre}</p>
                                                <p><strong>Tipo Contrato:</strong> ${data.TipoContratoNombre}</p>
                                                <p><strong>Modalidad:</strong> ${data.ModalidadNombre}</p>
                                                <p><strong>Período:</strong> ${data.PeriodoNombre}</p>
                                                <p><strong>Fecha de Pago:</strong> ${new Date(data.PagosFechaPago).toLocaleDateString('es-PE')}</p>
                                            </div>
                                        </div>

                                        <div class="card mt-3">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0"><i class="fas fa-clock mr-2"></i>Detalles de Horas Extras</h6>
                                            </div>
                                            <div class="card-body">
                                                <p><strong>Horas Trabajadas:</strong> ${data.HorasExtras || 0} horas</p>
                                                <p><strong>Valor por Hora:</strong> S/ ${(data.SueldoBase / 240).toFixed(2)}</p>
                                                <p><strong>Primeras 2 horas (125%):</strong> S/ ${((Math.min(data.HorasExtras || 0, 2)) * (data.SueldoBase / 240) * 1.25).toFixed(2)}</p>
                                                ${(data.HorasExtras || 0) > 2 ?
                            `<p><strong>Horas adicionales (135%):</strong> S/ ${(((data.HorasExtras - 2) * (data.SueldoBase / 240) * 1.35)).toFixed(2)}</p>`
                            : ''
                        }
                                                <hr>
                                                <p class="mb-0"><strong>Total H. Extras:</strong> <span class="text-info">S/ ${(data.HorasExtrasCalculadas || 0).toFixed(2)}</span></p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0"><i class="fas fa-calculator mr-2"></i>Desglose del Cálculo</h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="calculation-step">
                                                    <div class="d-flex justify-content-between border-bottom pb-2 mb-2">
                                                        <span><i class="fas fa-hand-holding-usd text-primary mr-2"></i>Sueldo Base:</span>
                                                        <span class="font-weight-bold">S/ ${data.SueldoBase.toFixed(2)}</span>
                                                    </div>
                                                </div>

                                                <div class="calculation-step">
                                                    <div class="d-flex justify-content-between text-success border-bottom pb-2 mb-2">
                                                        <span><i class="fas fa-plus-circle mr-2"></i>Bonificaciones (${data.PorcentajeBonificaciones || 0}%):</span>
                                                        <span class="font-weight-bold">+ S/ ${(data.BonosCalculados || 0).toFixed(2)}</span>
                                                    </div>
                                                </div>

                                                <div class="calculation-step">
                                                    <div class="d-flex justify-content-between text-info border-bottom pb-2 mb-2">
                                                        <span><i class="fas fa-clock mr-2"></i>Horas Extras (${data.HorasExtras || 0}h):</span>
                                                        <span class="font-weight-bold">+ S/ ${(data.HorasExtrasCalculadas || 0).toFixed(2)}</span>
                                                    </div>
                                                </div>

                                                <div class="calculation-step">
                                                    <div class="d-flex justify-content-between text-danger border-bottom pb-2 mb-2">
                                                        <span><i class="fas fa-minus-circle mr-2"></i>Deducciones (${data.PorcentajeDeducciones || 0}%):</span>
                                                        <span class="font-weight-bold">- S/ ${(data.DeduccionesCalculadas || 0).toFixed(2)}</span>
                                                    </div>
                                                </div>

                                                <hr class="my-3">
                                                <div class="d-flex justify-content-between h5 bg-light p-3 rounded">
                                                    <span><strong><i class="fas fa-equals mr-2"></i>Sueldo Neto:</strong></span>
                                                    <span class="font-weight-bold text-success">S/ ${data.PagosSalarioNeto.toFixed(2)}</span>
                                                </div>

                                                <div class="mt-3 p-2 bg-info text-white rounded text-center">
                                                    <small><i class="fas fa-info-circle mr-1"></i>
                                                        Cálculo: ${data.SueldoBase.toFixed(2)} + ${(data.BonosCalculados || 0).toFixed(2)} + ${(data.HorasExtrasCalculadas || 0).toFixed(2)} - ${(data.DeduccionesCalculadas || 0).toFixed(2)} = ${data.PagosSalarioNeto.toFixed(2)}
                                                    </small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `;

                    $('#modalDetallePagoContent').html(content);
                    $('#modalDetallePago').modal('show');
                },
                error: function () {
                    // Fallback con datos de ejemplo si no hay endpoint
                    var content = `
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle mr-2"></i>
                                    <strong>Información no disponible</strong> - Configure el endpoint /Pagos/ObtenerDetalle/{id} para mostrar detalles completos.
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0"><i class="fas fa-user mr-2"></i>Información del Trabajador</h6>
                                            </div>
                                            <div class="card-body">
                                                <p><strong>Pago ID:</strong> ${pagoId}</p>
                                                <p><strong>Estado:</strong> <span class="badge badge-success">Procesado</span></p>
                                                <p><em>Configure el endpoint para ver información completa</em></p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0"><i class="fas fa-calculator mr-2"></i>Cálculo del Sueldo</h6>
                                            </div>
                                            <div class="card-body">
                                                <p>Para ver el desglose completo, implemente:</p>
                                                <code>/Pagos/ObtenerDetalle/${pagoId}</code>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `;

                    $('#modalDetallePagoContent').html(content);
                    $('#modalDetallePago').modal('show');
                }
            });
        }

        // Función para descargar boleta
        function descargarBoleta(pagoId) {
            // Implementar descarga de boleta
            window.open(`/Pagos/DescargarBoleta/${pagoId}`, '_blank');
        }

        // Función para imprimir detalle
        function imprimirDetalle() {
            window.print();
        }
    </script>

    <style>
        .dataTables_wrapper {
            font-size: 0.875rem;
        }

        .table thead th {
            background-color: #f8f9fc;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.03em;
            padding: 0.75rem 0.5rem;
            vertical-align: middle;
            border-bottom: 2px solid #e3e6f0;
        }

        .table td {
            padding: 0.75rem 0.5rem;
            vertical-align: middle;
            font-size: 0.875rem;
        }

        .hover-shadow {
            transition: all 0.2s ease-in-out;
        }

            .hover-shadow:hover {
                transform: translateY(-2px);
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
            }

        .badge-outline-primary {
            color: #4e73df;
            border: 1px solid #4e73df;
            background-color: transparent;
        }

        .progress {
            background-color: #f8f9fc;
        }

        .btn-group .btn {
            padding: 0.25rem 0.5rem;
        }

        .modal-dialog {
            max-width: 900px;
        }
    </style>
}